package assignment;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

public class WebTestAssignment2 {

	public static void main(String[] args) {
		System.setProperty("webdriver.chrome.driver", "./drivers/chromedriver");
		WebDriver driver = new ChromeDriver();
		
		//driver.manage().window().maximize();
		driver.get("http://www.expedia.com/");
		
		try {
			WebElement flightTab = driver.findElement(By.id("tab-flight-tab-hp"));
			flightTab.click();
			WebElement fromLocation = driver.findElement(By.id("flight-origin-hp-flight"));
			fromLocation.clear();
			fromLocation.sendKeys("San Francisco, CA (SFO-San Francisco Intl.)");
			WebElement toLocation = driver.findElement(By.id("flight-destination-hp-flight"));
			toLocation.clear();
			toLocation.sendKeys("New York, NY");
			WebElement departing = driver.findElement(By.id("flight-departing-hp-flight"));
			departing.click();
			WebElement secondMonth = driver.findElement(By.cssSelector(".datepicker-cal-month:last-child"));
			WebElement twentyThree = secondMonth.findElement(By.xpath(".//button[text()='23']"));
			twentyThree.click();
			WebElement returning = driver.findElement(By.id("flight-returning-hp-flight"));
			returning.click();
			secondMonth = driver.findElement(By.cssSelector(".datepicker-cal-month:last-child"));
			WebElement twentySeven = secondMonth.findElement(By.xpath(".//button[text()='27']"));
			twentySeven.click();
			
			WebElement adult = driver.findElement(By.id("flight-adults-hp-flight"));
			Select adultSelect = new Select(adult);
			adultSelect.selectByValue("3");
			
			WebElement children = driver.findElement(By.id("flight-children-hp-flight"));
			Select childrenSelect = new Select(children);
			childrenSelect.selectByValue("2");
			
			WebElement age1 = driver.findElement(By.id("flight-age-select-1-hp-flight"));
			Select age1Select = new Select(age1);
			age1Select.selectByValue("5");
			
			WebElement age2 = driver.findElement(By.id("flight-age-select-2-hp-flight"));
			Select age2Select = new Select(age2);
			age2Select.selectByValue("10");
			
			WebElement addCar = driver.findElement(By.id("flight-add-car-checkbox-hp-flight"));
			if (!addCar.isSelected()) {
				addCar.click();
			}
						
			WebElement searchButton = driver.findElement(By.cssSelector(".btn-primary.btn-action.gcw-submit"));
			searchButton.click();
			
			WebDriverWait wait = new WebDriverWait(driver, 60);
			wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("#pi-interstitial > .progress-bar")));

//			driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
			List<WebElement> lis = driver.findElements(By.cssSelector("#flightModuleList li"));
			
			for (WebElement li : lis) {
				try {
					System.out.println();
					System.out.println("Departure time: " + li.findElement(By.className("departure-time")).getText());
					System.out.print("Arrival time: " + li.findElement(By.className("arrival-time")).getText());
				} catch (NoSuchElementException e) {}
				try {
					li.findElement(By.className("next-day"));
					System.out.println(" (next day)");
				} catch (NoSuchElementException e) {
					System.out.println();
				}
				try {
					System.out.println("Price: " + 
							li.findElement(By.className("dollars")).getText() + 
							li.findElement(By.className("cents")).getText());
				} catch (NoSuchElementException e) {}
			}
		} finally {
			driver.quit();
		}

	}

}
